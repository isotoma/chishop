#! /usr/bin/env python
from optparse import OptionParser
import os


def get_version(path):
    try :
        p = subprocess.Popen([sys.executable, "setup.py", "-V"], stdout=subprocess.PIPE, cwd=path)
        o, e = p.communicate()
        return o.strip()
    except:
        return "bootstrap"

parser = OptionParser()
parser.add_option("-e", "--environment", dest="environment",
                  help="What kind of deployment", default="dev")
parser.add_option("-c", "--extraconfig", dest="extraconfig",
                  help="A cfg file to add to the buildout \"extends\".",
                  default="")
options, args = parser.parse_args()

template =  "[buildout]\n" \
            "extends =\n" \
            "%(extends)s\n" \
            "cwd = %(cwd)s\n" \

extends = [
    "crane/base.cfg"
]

if options.environment != "dev":
    extends.extend([
        "crane/fullstack.cfg",
        "crane/environment/%s/environment.cfg" % options.environment,
    ])

if options.extraconfig:
    extends.append(options.extraconfig)

version = get_version("src")

print "Configuring to install version", version

open("buildout.cfg", "w").write(
    template % {
        "extends": "\n".join("    %s" % e for e in extends),
        "cwd": os.getcwd(),
    }
)
